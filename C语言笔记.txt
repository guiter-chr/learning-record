  张俊晖   
 
 18011165809
 
 17395590

 1401   FirstProj2

 51  8  组长  标配  高配  顶配  
  
 C程序设计     Dev C++

 编程  程序猿  程序媛 程序员      

  函数：实现某一个特定功能的程序段

 1.C程序（项目，工程project）是由函数(function)构成的
 2.main主函数，有且仅有一个，既是程序入口，又是程序出口   
 
 
 语法

  规则  ，规范   function  professional
  数据类型：数据分类
	简单数据类型：
		整型：整数 1 
		实型：实数，浮点型
		字符型：	'a' '!' '1',特殊整型 ASCII码
  语句：一行代码   ;  结束
  常量、变量：自己设 定的代表某种特定意义的符号
  运算符 ：分类  优先级 
  函数：
	库函数：底层定义好的函数，可以实现特定功能，  直接调用即可
	自定义函数  ：参数，返回值	
  
    知乎，Github，CSDN，简书，有道词典，bilibili 
 
 程序结构

  顺序结构

  分支选择结构： 选择，条件构造
		if-else:
		switch-case
  循环结构:某些操作在某种条件下重复执行了某些次数。
 	 
	循环三要素
		循环体：到底哪些操作在重复执行
		循环条件：哪个条件下重复 
		循环次数：重复了多少次
	for  while  do-while  if-goto 
 
 数组：array
   用于处理批量同类型数据	
   一维数组：数列   1 2  5  6  8 
   二维数组：矩阵、行列式  元素element
		1 2 3
		4 5 6
		7 8 9
   字符数组：字符串函数			

  FirstProj
- Errors: 0
- Warnings: 0
- Output Filename: E:\C PROJS\FirstProj.exe
- Output Size: 127.931640625 KiB
- Compilation Time: 1.63s

 
  HelloWorld
  CircleArea.c

  贝尔实验室   K.R C  ANSI C C99 C++11  C++  Java

  基本  复合  默认(缺省default)   大数问题 
  位(bit 0,1)  字节(Byte,8位)  千字节(KB,1024B)  
  兆字节(MB,1024K) ,GB,1024M,TB,1024G,PB,1024T  
  整型：signed  unsigned   TC TC以外
	整型：int 2 4
        短整型:short int->short 2
	长整型:long int->long 4
              :long long int 8
  实型：浮点型
	单精度：float 4
	双精度：double 8
  字符型：char  charactor  1  
        0000,0000    1111,1111   calc
            0           255
        ASCII码   标准128  扩展256  charset="utf-8"
        大写字母：A~Z 65~90   'A': 65
	小写字母	:97~122  'a': 97   32
    	数字字符:48~57   '0':48
	空格:            ' ':32
	空字符:          '\0':0  字符串的结束符
		"China\0" 
	转义字符 ：'\0' '\n' '\t' '\\' '\'' '\"'
	 
  常量与变量
	常量：
	    数字常量 2
		八进制：077 078
		十进制：12   123.456
			1.23456 * 10 ^ 2  1.23456e2
			12345.6 * 10 ^ -2 12345.6E-2
		十六进制:0~9 A~F
 			 0xAAFFAA  0X	
		color:#FFAAFF
	    字符常量
		ASCII码
		字符串与结束符
		转义字符
	    符号常量
		宏定义：编译预处理
			头文件包含：#include...
			条件编译:#if #endif....
			宏定义函数或字符串:#define...
		const
	变量：	 		
	    标识符
		标识符命名规则
			1.必须先定义后使用
			2.只能由字母、数字、下划线构成
			3.只能由字母、下划线打头	
			4.大小写敏感
			5.不能与关键字同名 32
		命名规范：
			1.见名知意
			2.不要太长 首字母  前几个字母
			3.函数，变量，常量...
	    类型转换:运算双方必须类型相同
		char short int long float double
		自动转换
			短变长
		强制转换
			长变短
			强制类型转换符：(类型名)
		short x;
		float y = 4.5,z = 6.8;
		
		z = x + y;		

		z = x;
		x = (short)z;  (int)  (char)  (float)
		
		123 + 2 = 125
		123
	   +    002

  运算符
	优先级：运算先后关系
	分类：
	    按功能分类
		算术运算符：
			+ - * / %（求余）++(自增) --
			/:若左右两边均为整数，则结果为整除的结果，如 5 / 3 = 1   3 / 5 = 0   3.0 / 5 = 0.6 
		 	%:求余  5 % 3 = 2  3 % 5 = ,左右两边必须全部都为整数
			++：x++ ++x  x = x + 1
			    x++:先操作后加1
			    ++x:先加1后操作
				x = 5;							z = x++;
				z = ++x;	
		关系运算符：大小关系，等于不等于关系
			> < >= <= == !=
			大小关系高于等于不等于关系				5 > 3 = 1  
			5 < 3 = 0 
			逻辑真假：
				逻辑真：真命题,1，true
				逻辑假：假命题,0,false
				1真0假
				非零即为真
		逻辑运算符：逻辑运算
			&&:逻辑与，并且 x:[3,5]
			  1 && 1 = 1  1 && 0 = 0
			  0 && 1 = 0  0 && 0 = 0	
			||：逻辑或，或者
			  1 || 1 = 1  1 || 0 = 1
			  0 || 1 = 1  0 || 0 = 0	
			!:逻辑非，!0 = 1 !1 = 0
		条件运算符:条件判断
			?:  
			if-else
				x > y   z = 1
				x == y  z = 0
				x < y   z = -1
			if-else嵌套
		赋值运算符：
			x = 5;
			复合赋值运算							+= -= *=。。。
				x += 3;	
		逗号运算符：优先级最低
			,
			从左到右依次执行每一个表达式，最后一个表达式的结果是整个表达式的结果
			加括号	
	    按操作数分类      
		单目运算符：除小括号外优先级最高，+，-
		双目运算符：5 + 3，左右留空格
		三目运算符：条件运算符 ?:		

  数字分解 revNum.dev
	/ %  1234 -> 4321
	1234 -> 1,2,3,4 ->4*1000+3*100+2*10+1 ->4321
	1234->1 ->1234 / 1000 -> 1
	1234->2 ->
	1234->3 ->
	1234->4 ->1234 % 10 -> 4
	最高位？
	中间位？
	最低位？			
  死循环
	while(1)
	{
		....
	}
	跳出循环：break
	循环体，循环条件，循环次数
	while(循环条件)- 当型循环 - 先判断后执行
	{
		循环体;
	}

	while:当用户数据错误（不在1-10）的时候，执行重复输入
	
	for,while,do-while,if-goto
	
	goto:跳出多重循环
	break:跳出当层循环
	continue:跳出当次循环
	多重循环：
	for(;;)外层 1
	{
		for() 内层2
		{
			while()3
			{
				break;
				goto label;
			}	
		}
	}	
	label:printf("hello");
	
	do{
		循环体;
	}while(循环条件);
		
	do-while:先执行后判断 - 直到型循环
	
	for - 当型循环
	for(表达式1;表达式2;表达式3)
	{
		循环体;
	}


	for(循环变量赋初值;循环条件;改变循环变量的值)
	{
		循环体;
	}

	1.周圳南跑高配，8圈，for
	循环体：重复执行的操作，跑1圈
	循环条件：圈数不足8圈，构造条件
	循环次数：8次
	循环变量：构造条件，控制循环次数  i,j,k,m,n

	2.周圳南跑到死   

	循环次数N次，1~N,0~N-1,N~1,N-1~0
	for:更适用于循环次数确定的状况
	while,do-while:更适用于循环次数不确定的状况
		
	算法：
	    分析问题解决问题的方法与步骤。
	    套路。   数据结构    算法分析		
	
	    程序 =  算法 + 数据结构  大话数据结构

	    算法特点：有穷性、确定性、输入、输出、有效性
	   
	    描述工具：自然语言、流程图、代码
	 	圆角矩形 
	    格式说明符：
		%d-int %f-float %ld-long
		%x %0x-16进制   %lf-double 
		%s-字符串string  %c-char字符
	    
	    输入、输出 I/O
		输入函数
			格式化输入：scanf
			非格式化输入：不适用格式说明符
				getch getche getchar
				刷新缓冲区：fflush  
				一个字符的输入
		输出函数:
			格式化输出：printf
			非格式化输出 putchar
				一个字符的输出
		复合语句{
				char ch;
				ch = getchar();
				putchar(ch);
			}
		空语句：   ;
	随机函数 - 用于产生随机数   random  整数
   		randomize()  random()过时 
   		srand():置随机种子，为产生随机数做准备工作 ，准备工作只做1次
   		rand()：产生随机数  stdlib.h
   		time():获取时间，用时间做种子  time.h
		
		num = rand() % 6 + 1;

		srand((unsigned)time(NULL));

		如何产生指定范围内的随机数?
		1~6
	
	条件运算符、逻辑运算符、关系运算符
	
	if-else：用于值的判断或范围的判断
		if(x > 5)
		{
			...
		}else{
			...
		}

	switch-case：常用于多个值的判断	
		注意事项：
		1.break的使用
			若没有break,会继续执行下一个case，直到遇到break或执行完switch-case为止。
			建议每一个case后都加break
			break可有可无
		2.default的使用
		      若每一个case都不等则执行defalut
			常用于错误信息处理
			default可有可无
		3.case后的数据必须是整型常量

  套路：
	穷举法（暴力破解法）
		将所有可能解依次完成测试，直到找到正确解或全部测试完毕。
		1.找范围，找数据的范围，有几个范围写几层循环	
		2.找关系，找问题描述中存在的关系，在最内层循环测试关系
		三阶水仙花：153 = 1^3 + 5^3 + 3^3

	统计数据问题
		定义计数器变量cnt,count	
		通常初值为0：cnt = 0;
		如果满足条件，则cnt++
	图形输出问题
		找出图形中的规律    杨辉三角

	行数   空格数   星星数  换行数  n:总行数
	1	3	1	1
	2	2	3	1
	3	1	5	1
	4	0	7	1

	i	n-i	2i-1	1
   *
  ***
 *****
*******	

	循环跳出问题
		break:跳出当层循环
		continue：跳出当次循环
		goto：跳出多重循环
	
	累加累乘问题
		累加-在原来值的基础上不停的加数据，直到某个特定值为止
			初值通常为0
			cnt += ????
			找右边的（????）规律
		累乘-在原来值的基础上不停的乘数据，直到某个特定值为止
			初值通常为1
			cnt *= ?????
			找右边的规律
 	

		DevC++  code::block
	《大话数据结构》
	查找问题
		在大量数据中查找指定值的数据或指定位置的数据
#include <stdio.h>
#include <stdlib.h>
#define N 5
/* getHeights.dev
	找出软件19-3班有多少人的身高等于175。
		1.定义计数器，初值=0 
		2.定义50个变量来存储所有人的身高 
		3.录入所有人的身高 （50次，循环） 
		4.将每一个人的身高和175作比较（50次，循环） 
			若相等，计数器+1 
		5.输出计数器的值 
		
		int height[50];
		
		数组名：height 
		数组长度：数组所能处理的最大数据量，数组中元素的个数 ,50,N
		数组下标：一种索引号(从0起标),index,0~49 ,0~N-1
		数组元素： height[0]~height[49] 
		数组类型：int
*/
 
int main(){
	int cnt = 0;
	int height[N],i;
	char name[N][15]={"郑轮盘","刘天喜","陈婷","陈润芳","杨紫蓝"};
	
	//3.录入所有人的身高 （50次，循环） 
	for(i = 0;i < N;i++)
	{
		printf("请输入%s的身高:",name[i]);
		scanf("%d",&height[i]);
		if(height[i] == 175)
		{
			cnt++;
		}
	}
	//4.将每一个人的身高和175作比较（50次，循环） 
	//		若相等，计数器+1 
	
	printf("软件19-3班身高等于175的人数为：%d",cnt);
	getch(); 
	return 0;
}
	数组
		数组名：height 
		数组长度：数组所能处理的最大数据量，51，N,数组中元素的个数 
		数组下标：0~50，0~N-1,一种索引号(从0起标),index 
		数组元素：height[0]~height[50]
		数组类型：int 
	函数
		自定义函数的写法。
		#include <stdio.h>
		#include <stdlib.h>

/* 	getMax.dev
	求两个数的最大值。 
	假定19-2班级管理系统共有如下几个功能：
		成员管理(2000)、文件管理(1500)、相册管理(3000)、出勤管理(2000) 
		menberMang()  、filemang()、imageMang()、attendMang() 
		代码重用率 
		
	调用者：
	被调用者：	
	参数：调用者给被调用者的数据 
	返回值： 被调用者做完事之后给回调用者的数据
	
	分析在问题的描述中，到底有不有参数？如果有参数，又有几个参数？ 
	每一个参数的数据类型分别又是什么？ 
	分析在问题描述中，被调用者做完事之后，到底有不有返回值？
	如果有返回值，看到底是什么类型？ 
	
	形式参数：形参，函数定义时的参数 
	实际参数 ：实参，函数调用时的参数 
	实参为形参传值
	
	一致性体现：参数个数、类型；返回值个数、类型 
	函数声明与函数定义要一致 
	返回值必须与返回类型一致 
	形参与实参必须一致 
	
	建议形参、实参名称定义成相同的
	建议返回值和接收返回值的变量，名称定义成相同的
		以便理解调用者与被调用者数据之间的关联关系 
*/
//函数声明 
int getMax(int num1,int num2); 
//函数定义，函数到底怎么去实现功能
int getMax(int num1,int num2) 
{
	int max;
	
	if(num1 > num2)
	{
		max = num1;
	}else{
		max = num2;
	} 
	
	return max;  //return 
} 

int main(int argc, char *argv[]) {
	int num1,num2,max;
	
	printf("input Num1:");
	scanf("%d",&num1);
	printf("input Num2:");
	scanf("%d",&num2);
	
	max = getMax(num1,num2); 
	
	printf("Maxx = %d",max);
	getch(); 
	return 0;
}
		
	递推问题
		要处理的数据存在递推关系，根据这种关系将数据推导出来的过程
		斐波那契数列问题
		关键点：找出数据间的关联关系
		兔子问题：
			1  1  2  3  5  8  13.........?.....?  			

			1  2  3  4  5  6  7..........24....length
			
			0  1  2  3  4................23....length-1
				
			nums[i] = nums[i-1] + nums[i-2];
			nums[2] = nums[1] + nums[0];
			2~length-1
		
	排序问题
		升序或降序
		冒泡排序：
			比较和交换  7  6   7-i
				   N  N-1  N-i 
			第一轮(6)  	第二轮(5)
		45	45		32
		65	32		15
		32	15		45
		15	56		56
		56	65		23	
		78	23		65
		23	78





	E:\DEVC\DevCppPortable\MinGW64\x86_64-w64-mingw32\include
	
	插入删除问题
		关联数组、指针
		原数组有序             length-1:5  length:6
			插入前：0 1 3 4 5 6    <- 2	
			中  间：0 1   3 4 5 6
			插入后：0 1 2 3 4 5 6
			0.判断数组是否已满
			1.找位置：查找插入位置
				比较（从后往前/从前往后）
			2.将数据依次往后移动
				从后往前依次移动一个位置
			3.插入
		原数组无序
			2 1 4 4 1 5   <- 3
			int arr[5];  0~4  arr[5]  arr[6]
		删除指定位置的元素
			删除模型：      loc-1loc    loc~length-1
			删除前：  10  2  5  3  6  7    删除第3个元素
			中  间：  10  2  3  6  7  7
			删除后：	  10  2  3  6  7  -99999
	
		删除指定值的元素
			删除前： 10  2  5  5  5  7   删除值为5的元素
			中  间： 找到值为5的元素的位置
			删除后： 10  2  7	
	标志变量问题
		素数判断
			如果一个数只能被1和本身整除：素数
			num, 不能被2~num-1中的任意一个数整除
			7,2~6
	递归
		递归函数
			自己调用自己的函数
		有规律数据、有规律运动、有规律行为处理

		1.找规律
			找上一步操作与下一步操作之间的规律
		2.找出口
			递归出口，规律推导的终点

		
		求n!  5！= 5 * 4!  4! = 4 * 3!  3! = 3 * 2!
		      2! = 2 * 1!  1! = 1 * 0!  0! = 1			  
		  关系：n! = n * (n-1)!   f(n) = n * f(n-1);
		  出口：n == 0  有几个出库写几个判断  
 
		斐波那契数列求解，必须用递归。
		
		1  1  2  3  5.。。。。。 
		if(n == 1 || n == 2)
			return 1;
		else
			return f(n-1) + f(n-2);

		汉诺塔


	二维数组
		数学模型：数列、矩阵（行列式）、方阵（N阶）
		三行四列:
		int arr[3][4];   int arr[M][N];
		元素数量：行数*列数
		元素表达：行标+列标    M行N列
			  0~2  0~3    0~M-1  0~N-1
		数组赋初值：
	  
		int str[10];   0~9  str[0]~str[9]  
		0  1  2  3
	arr[0]	1  2  3  4
	arr[1]	5  6  7  8
	arr[2]	9  0  1  2
 
    		score[M][N]	             N-1
		语文   英语   数学   C语言   平均分  
	张三：   90	92    85     15       
	李四：  70	75    76     90
      王麻子：   59	58    50     55	 	
      光和顺：	40	45    30     20       
	Code Blocks	
      			
	字符数组
		char  str[10];
		字符串   String
		%s   以空格作为结束符
		操作到第一个结束符为止
		字符串函数   string.h		
			mem:memory   str:string
			strlen: length   "I love you.\0"
			cat:concatenate 连接   cpy:copy
			cmp:compare 比较  1 0 -1
			lwr:lowercase 小写  upr:uppercase  大写
			rev:reverse 反转
 		回文判断
			"abcba"  "abcde"
		模式匹配
	结构体：
		定义数据结构，即一种新的数据类型
		
		struct

		属性  类与对象  属性，行为（方法）

		动态内存分配：malloc给出   free收回

		typedef  int  size_t;		

		void * malloc(size_t size);
		
		malloc(int);
	
		int x[5];

		malloc(x);
	
	JavaScript  数据库   Linux  计算机网络技术






















	
	
	











   