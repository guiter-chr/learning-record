Linux应用基础 第1次课
考核方式：机试（平时*50%+期末*50%）
         平时成绩=上课表现+平时作业
学习方式：在线学习

	 学习的课程：中国大学MOOC -Linux系统管理
         网址：https://www.icourse163.org

Linux系统概述：
问题：
1.中国的最快的超级计算机是什么？
   神威太湖之光（世界排名第3）
   天河二号（世界排名第4）
2.Linux操作系统发展奠基人
  （1）Linux之父:Linus Torvals，开发了Linux操作系统的内核
  （2）自由软件之父：Richard Stallman,成立了自由软件基金会，提出了GNU计划
       GNU计划？ GNU Not Unix
       Unix:付费的操作系统，源代码不开放
       Linux:不一定免费（Redhat就是付费的，Centos就是免费的）,源代码开放
       GNU目的：开发自由软件
       自由软件：不是免费软件，它可以不受限制地自由使用、复制、研究、修改、以及发布。
3.常见的Linux操作系统有哪些？
	Centos ubantu debian  redhat ...
       市场占有率最高的是：redhat
       Centos和redhat的区别：
	redhat在更新软件、升级等情况下需要付费
        Centos:在redhat源代码的基础上重新编译得到的，免费的操作系统

4.系统安装：
（1）虚拟化软件vmware workstation
	百度网盘链接：https://pan.baidu.com/s/1S5s9WYF6zndZTzIo_mLb-w 
	提取码：cprz
（2）Centos7的镜像
	下载地址：http://mirrors.njupt.edu.cn/centos/7.7.1908/isos/x86_64/
	选择镜像：CentOS-7-x86_64-DVD-1908.iso 

命令提示符
[Admin@localhost~]$
[当前登录的用户名@当前登录的电脑名 当前的工作目录]当前登录用户的类别
Admin 代表当前登录的用户名
localhost 代表当前登录的电脑名
~ 代表当前的用户的主目录
$ 代表当前登录的用户为普通用户


普通用户：[Admin@localhost~]$
管理员用户：[root@localhost~]#
# 代表当前登录的用户为管理员用户

切换用户：[Admin@localhost~]$ su ______（填写想切换到的用户名）

shell俗称壳（用来区别核），为用户提供操作系统的接口（用户与系统的交互软件），它是命令语言，命令解释器，

shell分类
命令行shell（最常用）
图形化shell

大多数的linux系统都是使用Bash。。。。。
Linux默认的shell程序是/bin/bash	

clear  清屏的作用

帮助命令：help，man，pinfo
查看某种指定命令的方法：
man _____（该命令）
____（该命令） --help
pinfo _____（该命令）

文件编辑和保存退出
	按i键编辑文件
	保存并退出：按Esc 再按： 再输入wq  最后按回车

关闭和重启Linux
	命令：shutdown（最常用）  poweroff  halt  reboot
	shutdown:
		-r 重启系统
		-h 关闭系统
		-k 仅仅发送警告，不关机或重启
		--no-wall   不发送信息
		-c 取消即将执行的shutdown命令

Linux命令一般格式
	[root@server1 ～]#命令名 [选项1] [选项2]...<参数1> <参数2>...
	命令名：由小写的英文字母构成
	选项:是对命令的特别定义, -般以"- "开始，多个选项可共用一一个"-"
	参数:提供命令运行的信息,或者是命令执行过程中所使用的文件名
	注意:命令、选项、参数之间必须有空格


目录:创建、切换、删除、显示( mkdir、 cd、 rmdir、 pwd )
	/:为根目录	/bin：可执行文件目录	/boot：系统启动目录	/dev：设备目录
	/etc：配置目录	/home：普通用户的家目录所放的地方		/lib：库函数目录	/root：管理员用户的家目录所放的地方	/sbin：存放管理员运行的命令	/srv：	系统启动后某些软件需启用资源的所放地	/tmp：临时目录		/opt：大型软件（第三方软件）		/media：可移动设备

	d：directry（目录）
	rwxr-xr-x  文件权限   r：读   w:写   x:执行  有相应的权限用相应的字母表示，没有就用-代替	分为3组：rwx：是文件拥有者的权限  r-x：是同组其他用户的权限  r-x：其他用户的权限

	mkdir  创建目录
	用法：mkdir [选项]...目录名
	选项：-m或--mode <目录属性>建立目录时同时设置目录的权限。(类似chmod）
		-p或--parents ,不管建立目录的上层目录是否存在立,都会一并建立

	在当前目录创建test1，test2，test3，3个目录：mkdir test{1,2,3}
	在当前目录创建test1，test2..test10，10个目录：mkdir test{1..10}
	在当前目录下创建一个隐藏目录：mkdir .XXX(目录名)


	cd 切换目录
	语法格式：cd 目录路径
	cd  默认切换到当前登录用户的主目录
	cd /  切换到当前登录用户的根目录
	目录路径：（1）绝对路径  （2）相对路径
	"～"	表示当前用户的主目录
	"."	表示当前所在的目录
	".."	表示当前所在目录的上一层目录
	"-"	表示回退到上一次工作目录

	cd ~用户名	表示切换到xxx用户的主目录

	rmdir	删除目录
	功能;只能删除空目录
	语法格式：rmdir [选项]...目录...
	rmdir可以用rm -r代替
	rm -r 目录  可以删除空目录，也可以删除非空目录

	pwd 显示当前工作目录的绝对路径
	用法：pwd

	ls 列表查看（列出文件和文件属性，该命令不是查看文件内容）
	用法：ls [选项] [参数：文件或者目录]
	常用选项：
		-l 列出文件属性
		-a 显示所有文件和目录
		-A 显示所有文件和目录，但不显示"."和".."表示的目录
		-i 显示文件的inode编号

		
		ls 列出当前目录下的所有目录，但不包含隐藏文件
		ls file 列表查看file是否存在（注：file是文本文件，不是目录文件）
		ls dir 列出dir目录下的所有文件，但是不包含隐藏文件（注：dir是目录文件）
		-rw-r--r--. l Admin admin 0 3月  18 11;32  file
		-:文件类型，file是文本文件
		rw-r--r--文件权限（拥有者 同组其他用户 其他用户）
		l：文件的硬链接数
		Admin:文件拥有者
		admin：文件的所属组
		0：文件的大小（单位：字节）
		3月  18 11;32 文件的修改时间
		file：文件名

文件：创建、复制、移动、删除、查看(touch、cp、mv、rm、file、)
	创建文件：touch
	功能：创建一个空文件
	语法格式：touch [选项] 文件名的路径
	注：如果创建的文件已经存在，则会修改文件的访问时间
	例如：
	（1）在当前目录创建一个文本文件file1
		touch file1
	（2）touch file{1,3,5}
	（3）touch file{1..10}

	复制文件：cp
	功能：复制文件或者目录
	语法格式：cp [选项] <源文件或者目录> <目标文件或者目录> 
	常用的选项:
	-f 强行复制文件或目录，不论目标文件或目录是否已存在
	-i 覆盖前询问时间（使-n选项失效）
	-n 不覆盖已存在的文件（使-i选项失效）
	-u 只在源文件比目标文件新或目录文件不存在时才进行复制
	-r 递归复制目录及其子目录内的所有文件（或者-R）
	-p 保留原文件的所有者、组、权限
	注意：如果使用-i -n -f中的多个，仅最后一个生效
  	例如： file1是文本文件 test是目录

	（1）将当前目录下的文件file1复制到当前目录下的test目录中
		cp file1 test
	
	（2）cp -f file1 test   
        （3）cp -i file1 test  目标文件存在时会询问
	（4）cp -n file1 test  目标文件存在不会被覆盖
	（5）cp -u file1 test  只在源文件文件比目标文件新或目标文件不存在时才进行复制

	（6）cp file1 file3

             cp  文件  目录    直接复制
	     cp  文件  文件    复制过去会重命名
            
	     cp file1 test         将file1复制到test目录
	     cp file1 test/file2   将file1复制到test目录下去并重命名为file2

	（7）复制目录时必须用-r

            cp -r test test3

	（8）当前用户为root,把Admin主目录下的文件file1复制到root的主目录(要求拷贝时权限保持不变)
		
		cp  -p ~Admin/file1  ~(拷贝到主目录)
		
		cp  -p ~Admin/file1  .（拷贝到当前目录）

        （9）cp file{1,3,5} test



编辑文本文件  vi 文件路径
查看文本文件内容 cat 文件路径

	移动文件或者重命名：mv
	移动和复制的区别：
		移动后：源文件不存在
		复制后：源文件不动
	mv的选项和cp的选项一样

mv两个功能：
	（1）移动文件  语法：mv 文件 目录
	（2）重命名文件 语法：mv 源文件 目标文件

删除文件或目录：rm
	语法：rm [选项] <文件或目录>

	选项：
		-f 强制删除。忽略不存在的文件，不提示确认
		-i 在删除前需要确认 （默认选项）
		-r 用于删除目录，递归删除目录及下面文件和子目录


探测文件和目录类型：file
	语法:file [选项] <文件或目录名>


显示文本文件内容：cat  head  tail  more  less

	cat：语法：cat [选项] [文件名]
	常用选项：
		-n 显示文件时对文件内容的每一行进行编号
		-b 显示文件时对文件内容进行编号，不对空白行编号
		-s 对连续的多个空白行合并为一个空白行

	head：语法：head [选项] [文件名]
	常用选项：
		-n 行数num  显示前num行的内容
		-c 字符数num 显示前num个字符

	tail：语法：tail [选项] [文件名]
	常用选项：
		-n 行数num  显示后num行的内容
		-c 字符数num 显示后num个字符

	less（按页查看文件）：用法：less [文件名]
	向上的箭头按键 往上翻一行
	向下的箭头按键 往下翻一行
	pgUp按键 往上翻一页
	pgDn按键 往下翻一页
	按q推出文件
	
	more 逐页阅读文件，只能往后翻：
		语法：more 文件名
		Enter键 往后翻一行
		按键q，退出阅读

	创建链接文件：ln
	语法：ln [选项] 源文件或目录 目标文件或目录
	分类;
		硬链接  相当于给文件取别名（默认创建硬链接）
		软链接  相当于给文件创建一个快捷方式
	常用选项
		-f  强制性覆盖已经存在的链接文件
		-i  如果链接文件存在，覆盖时会询问
		-s  创建软连接（符号链接就是软链接）
	通过符号链接文件可以查看、修改、执行（读写执行）源文件，但是符号链接不等同于源文件
	删除一个符号链接不会影响到这个符号链接指向的源文件或目录；但删除、移动、或重命名某个符号链接所指向的源文件或目录不会导致这个符号链接被删除，而是直接“断裂”
	软连接浅蓝色
	断裂的软链接，背景颜色为黑色，字体为红色
	源文件和硬链接文件对应的是同一个文件，通过任意一个文件名都可以读写执行该文件。
	不能给目录创建硬链接
	
	切换用户：su
	语法：su <用户名>

	date：显示或设置系统时间与日期
	cal：显示日历
	uname：打印当前系统相关信息
	clear：清楚终端信息

文本编辑器：
	Vi
	Vim
	ENACS
	gedit
	OpenOffice
	Vi和Vim是最常用、最基本的文本编辑器
	Vi只能执行文本的输入、删除、查找、替换等操作、不能对字体、段落进行排版
	Vim是Vi的的一个改进伴，兼容了所有Vi的指令，还添加了许多的重要特性
	语法：vi [文件名字]
	注意：若已存在，就直接打开文件并显示文件内容
	若不存在，则存盘时创建

vi编辑器3种模式：
	命令模式（又称一般模式）
		当用vi打开一个文件时，默认的工作模式就是命令模式，或按“esc”也可以进入命令模式。可以控制屏幕光标的移动，字符、字或行的删除、复制、粘贴等
	编辑模式：
		按下“i，I，o，O，a，A”等字母之后就可以进入编辑模式。可以进行文字的添加及修改
	命令行模式（又称为末行模式）
		在命令模式中输入“:”就可以将光标移动到屏幕最后一行。可以文本保存、查找、替换等操作。

命令模式的指令：
	光标移动命令
		上下左右方向键对应其自身方向移动一个字符（或“hjkl”也可以对应左下上右方向键）
		ctrl+f	向下翻一页
		ctrl+b	向上翻一页
		ctrl+d	向下翻半页
		ctrl+u	向上翻半页
		H 光标移动屏幕最上方的那一行
		M 光标移动屏幕中间那一行
		L 光标移动屏幕最下方的那一行
		G 光标移动到文件的最后一行
		nG 移动到第n行
		n<enter> 光标从当前位置移动向下移动n行
		^或0 将光标移动到本行的行首字符
		$ 将光标移动到本行的行尾字符
		w 将光标快速跳转到当前所在位置的后一个单词的首字母
		b 将光标快速跳转到当前所在位置的前一个单词的首字母
		e 将光标快速跳转到当前所在位置的后一个单词的尾字母
		n<space> 按下数字后再按空格键，光标会在当前行向右移动n个字符
		u 取消最近一次的操作，可以多次使用u命令恢复以进行的多步操作
		U 取消当前进行的所有操作
		ctrl+r 对使用u命令撤销的操作进行恢复
	删除、复制、粘贴命令
		nx，nX nx为向后删除n个字符，nX为向前删除n个字符
		x,X x为向后删除一个字符，X为向前删除一个字符
		dd 删除光标所在的那一整行
		ndd 删除光标所在行的向下n行
		d1G 删除光标所在行到第一行的所有数据
		dG 删除贯标所在行到最后一行的所有数据
		yw 复制当前光标到单词尾支付的内容到vi缓冲区
		y$ 复制当前光标到行尾的内容到vi缓冲区
		y^ 复制当前光标到行首的内容到vi缓冲区
		yy 复制光标所在行
		nyy 复制光标所在行的向下n行，例如20yy，向下复制20行
		y1G 复制光标所在行到第一行的所有数据
		yG 复制光标所在行到最后一行的所有数据
		p，P p为复制的数据粘贴在光标下一行，P为粘贴在光标的上一行
		J 将光标所在行与下一行的数据结合成一行

编辑模式命令：

		i 在当前光标所在处插入要输入的字符 ，光标后面的字符回往后面退
		I 在光标移动到当前行的行首插入字符
		a 从当前光标的下一个字符的位置添加字符，已处在的字符会向后退
		A 将光标移动到当前行的行尾添加字符
		o 在光标所在的下方插入一行
		O 在光标所在的上方插入一行
		r 替换光标所指的哪一个字符
		R 一直替换光标所指的字符，直到按下esc为止
		esc 退出编辑模式，回到命令模式

命令行模式：
	保存命令：
		w 将编辑的数据保存至硬盘文件中
		w！ 若文件属性为只读，强制写入该文件
		q 退出vi，若文件被改动，则提示无法退出信息
		q！不保存文件，直接退出vi
		wq 保存文件后退出
		wq！强制保存文件后退出
		w 文件名  将数据保存到另一个文件中，相当于另存为
		r 文件名  将另一个文件的内容加入到当前文件光标所在行的后面

	设置行号、复制、移动、删除、查找替换命令
		set nu  显示行号、设定之后，会在每一行面前出现行号
		set nonu  取消行号
		n1,n2 co n3  将从n1行到n2行之间（包括n1,n2行本身）的所有文本复制到n3行之后
		n1,n2 m n3  将从n1行到n2行之间（包括n1，n2行本身）的所有文本移动到n3行之后
		n1,n2 d  删除从n1行到n2行之间（包括n1，n2行本身）的所有文本

		s/old/new  将当前行中查找到的第一个字符“old”串替换为“new”
		s/old/new/g  将当前行中查找到的所有字符串“old”替换为“new”
		n1，n2 s/old/new/g  在行号“n1，n2”范围内替换所有的字符串“old”为“new”
		%s/old/new/g  在整个文件范围内替换所有的字符串“old”为“new”
		/待查找的字符串  从上而下在文件中查找字符串
		？待查找的字符串  从下而上在文件中查找字符串
		n 定位下一个匹配的字符串
		N 定位上一个匹配的字符串


用户和用户组的管理：
	Linux系统是一个多用户的时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统
	为了保证系统的安全性，必须对每个用户设置权限，规范他们对系统的操作
	用户与组管理是保证Linux操作系统被安全使用的前提。Linux权限控制机制也是Linux优良特性之一

Linux用户可以通过/etc/passwd来查看用户的基本信息
权限rw-r--r--，任何用户可以读此文件，只有管理员用户能写此文件
只有管理员才能进行用户的管理
Linux用户可以通过/etc/shadow来查看用户的密码文件
权限--------- 即只有root用户才能操作此文件
shadow文件中，密码字段为"*"表示用户被禁止登录，为"!!"表示密码未设置，为"!"表示用户被锁定
密码：hash密码（加密）
密码的处理是单向的，从原始密码――>hash密码

Linux用户分类：管理员用户，系统用户，自定义用户

系统管理员：即root帐户，UID号为0，拥有所有系统权限
	可对系统中任何的文件进行读、写、删等操作，还可对磁盘进行分区，建立文件系统等
	一般不用root用户登录系统，以免不小心导致系统崩溃
	root 用户与普通用户登录的提示符不一样
	不允许以root身份进行远程登录

系统用户
	Linux为满足自身系统管理所内建的账号，通常在安装过程中自动创建
	不能用于登录操作系统，因为他们的登录shell为/sbin/nologin
	其UID在1-999之间
	
自定义用户
	由超级用户创建并赋予权限，UID在1000-60000之间
	一个普通用户不能在其他普通用户的主目录下进行读写文件，只能管理自己启动自己的进程
	主目录默认位于"/home/用户名"下
	主目录默认配置信息是从/etc/login.defs文件中读取

Linux用户组描述
	在Linux系统每一个用户都要属于一个或多组，有了用户组，我们就可以将用户添加到组中去，这样就方便了管理员对用户的集中管理
	Linux系统中组也分为普通用户组与系统组两大类
	当一个用户属于多个组时，这些组中只能有一个作为该用户的组属性，其他组就被称为此用户的次属组
	
Linux用户组配置文件
	系统组信息文件与用户文件类似，他包括：
	组基本信息文件（/etc/group）
		文件：/etc/group
		格式：grp1:x:500:lonny,redhat
		含义：组名称:群组密码:群组ID:组里面的用户成员
	组密码信息文件（/etc/gshadow）
		文件:/etc/gshadow
		格式：grpl:CZsU5Mq8LVJKo:lonny:redhat
		含义：用户组名:用户组密码:用户组管理员的名称:成员列表

添加用户：
	useradd 选项 新建的用户名
	-u <uid>  账户的用户ID
	-d <目录>  指定用户的主目录
	-c <备注>  账户主组的名称或ID
	-g <群组>  账户的附加组列表
	-G <群组>  账户的附加组列表
	-e <有效期限>  账户的过期日期（年/月/日）
	-s <shell>  登录所使用的shell
	-m/-M  建立（-m）或不创建（-M）用户的主目录
	-r  创建一个系统账户

修改用户信息
	usermod	选项 用户名
	-c  改变用户的描述信息
	-d  改变用户的主目录，如果加上-m则会将旧主目录移动到新的目录中去（-m应加在新目录之后）
	-e  设置用户账户的过期时间（年-月-日）
	-g  改变用户的主属性
	-G  设置用户属于那些附属目录
	-l  改变用户的登录用户名
	-s  改变用户的默认shell
	-u  改变用户的UID
	-L  锁住密码，使密码不可用(账户被锁定的情况下密码前会有一个感叹号，同样也无法登录系统)
	-U  为用户密码解锁
	
修改或删除用户密码
	passwd 选项 用户名
	-k  保存身份验证令牌不过期
	-d  删除已命名账号的密码  
	-l  锁定指定账户的密码
	-u  解锁指定账户的密码
	-e  终止指定账户的密码（不能跟时间，不能和-x/-n/-w/-i等选项合用）
	-f  强制执行操作
	-x  密码需要修改的天数
	-n  密码不能更改的天数
	-w  当密码过期前多少天开始提醒用户
	-i  当密码过期后经过多少天该账号会被禁用
	-S  报告已命名账户的密码状态

删除用户
	userdel 选项 用户名
	-r  删除用户主目录以及目录中所有文件
	删除一个用户必须：
		删除/ets/passwd和/etc/shadow文件中与用户相关的记录
		删除/ets/grouup和/etc/gshadow文件中与用户相关的记录
		删除用户的主目录
		
	删除属于此用户的文件

用户组的管理

groupadd 添加用户组
	语法：groupadd 选项 组名
	-g 组ID    用来给用户组指定GID，该值必须唯一，且为整数
	-p 密码    修改组的密码
	
groupdel 删除用户组
	语法：groupdel 选项 组名
	基本不用选项
	如果某个用户组是其他用户的主属组，这个组是不能直接删除的

groupmod 修改用户组
	语法：groupmod 选项 组名
	-g GID     将组ID改为GID
	-n NEW_GROUP  更改祖名为NEW_GROUP
	-o    允许使用重复的GID
	-p PASSWORD   将密码更改为（加密过的）PASSWORD

gpasswd 设置群组密码
	语法：gpasswd 选项 组名
	-a 用户名   向组GROUP中添加用户USER
	-d 用户名   从组GROUP中添加或删除用户
	-r      移除组GROUP的密码
	-M 用户名   设置组GROUP的成员列表
	-A 用户名   设置组的管理员列表
	
groups 查看用户属组
	groups 用户名  列出“xxx”用户的所有属组
	groups   只列出当前用户的所有属组

newgrp 切换用户组
	语法：newgrp 组名   (把当前用户切换到指定的用户组)
	例如：/home/user2/file1文件的拥有者为root，属组group1，而admin用户是group1组的成员，请问如何让admin用户访问/home/user2/file1文件

	第一步:admin拥护要能够访问/home/user2目录
	     (1)查看admin对/home/uesr2目录的访问权限：ls -l /home
		drwx------. 3 user2 user2  91  4月  20 08:40 user2
		根据该目录的文件拥有者和属组可以看出admin用户属于其他用户
	    （2）其他用户的权限为：---（没有任何权限）
		修改/home/user2目录名的权限，让admin用户可以访问
		chmod o+rwx /home/user2
		修改权限后查看admin是否可以访问该目录：ls -l /home
		drwx---rwx. 3 user2 user2  91  4月  20 08:44 user2
	第二步：admin用户对该目录下的file1文件要有读的权限才可以
	     （1）查看file1文件的权限
		ls -l /home/user2/file1
	     （2）如果admin用户对file1文件没有读的权限，则为其添加读的权限
		chmod g+r /home/user1/file1
	     （3）把admin用户切换到group1组
		newgrp group1
	      （4）admin用户访问file1文件
		cat/hone/user2/file1


	注意事项：
		(1)默认情况下，当前用户是在主属组工作
		（2）如果当前用户要使用附属组的资源，必须要切换到附属组
		（3）切换到附属组是临时有效，一旦退出就失效


显示用户及组ID
	语法：id 选项 用户名
	选项：去终端使用帮助命令
	
	例如
	查看admin用户的用户和组信息
	id admin


磁盘的管理和文件系统的操作
	1磁盘管理
	 1）添加磁盘
		设备文件：位于/dev目录下   （device）
		本地设备：通过设备文件来访问
		   分：字符设备  块设备
		网络设备：通过IP+端口的方式

		Linux系统中所有的硬件设备都是通过文件方式来表现和使用，称为设备文件。通常存放在Linux下的/dev目录下。通常将设备分为：
		字符设备：是Linux最简单的设备，是指那些必须以串行顺序依次进行访问的设备，如鼠标。。
		块设备：块设备可以用任意顺序进行访问，以块为单位进行操作，如硬盘、软驱、光驱等。经过系统的快速缓冲，提高了磁盘的I/O性能
		网络设备：不是基于文件系统的访问，在/dev/下没有对应的设备文件，必须通过套接字来访问，要结合TCP/IP协议栈来使用
		不能通过设备文件来访问磁盘
		磁盘设备文件命名方式：
		hd:IDE
		sd:SCSI、SATA磁盘
		/dev/sda /dev/sda1 /dev/sda2 /dev/sad
		sd 表示该磁盘是SCSI或SATA磁盘
		a 表示是第1块SCSI或SATA磁盘
		2 表示是磁盘的第2个分区


	 2）磁盘分区
		任何一个操作系统都将其硬盘分为三种分区
		硬盘容量（两个分区加起来最多4个）=主分区的容量（最多4个）+扩展分区的容量（最多1个）
		扩展分区：不能直接使用，必须划分成逻辑分区使用
		扩展分区的容量=所有的逻辑分区的容量之和（若干个）
		逻辑分区可以有n个

		命令：fdisk
		语法：fdisk 选项 磁盘   更改分区表
		fdisk 选项 -l 磁盘      列出分区表
		fdisk -s 分区           给出分区大小（快数）
		m    打印帮助信息
		n    添加一个新的分区
		d    删除分区
		p    打印分区表
		w    把分区表写入磁盘，保存并退出
		q    直接退出，不保存信息
		例如
		对新添加的第2块磁盘/dev/sdb进行分区，分成2个主分区，1个扩展分区，3个逻辑分区
		fdisk /dev/adb
	 3）磁盘、分区格式化
		格式化的原理：为分区创建文件系统
		mkfs（格式化命令）
		语法：mkfs 选项 文件系统的类型 分区/磁盘
		文件系统：
			操作系统中负责管理和存储文件信息的软件机构称为文件管理系统，简称文件系统

		文件系统――分类
			Linux系统核心支持十多种文件系统类型：ext、ext2、ext3、exr4、swap、vfat、nfs、smb、iso9660、xfs
		分区/磁盘的格式化
			例如：
			1）对/dev/sdb磁盘的第一个分区进行格式化，格式化所使用的文件系统为ext4
			格式化命令：mkfs -t ext4 /dev/sdb1
			查看分区格式化结果：lsblk -f
	 4）挂载磁盘
	    挂载条件：
	    ①分区已经格式化；②建立一个目录作为挂载点
   	    系统默认挂载点目录：/mnt
	    ①手动挂载
		mount
		语法：mount 选项 设备名 挂载点
		-t 指定挂载的文件系统类型
		-o 指定挂载选项
			-o ro,rw 以只读或读写形式挂载，默认是rw
			-o async 代表所有操作使用缓存（内存）：提高文件系统读写数据的效率；默认为async使用缓存（内存）
			-o sync 代表所有操作直接写入磁盘：代表所有操作直接写入磁盘；应用在对数据安全性比较高的场景
			。。。

		例如：
		1）把/dev/sdb1 挂载到/mnt/sdb_1目录
		创建挂载目录 mkdir /mnt/sdb_1
		挂载：
		查询挂载命令：df
		df可以按照kb、mb为单位

	分区卸载：umount
	语法：umount 分区设备文件名或者挂载点
	    
		②自动挂载
		mount命令挂载的分区，系统重启后会失效，需要重新挂载
		需要修改的配置文件：/etc/fstab
		文件格式：
		分区或磁盘的设备文件名 挂载点 文件系统 挂载选项 dump功能 是否检查文件系统及从、检查次序
		例如：
		对/dev/sdb1分区进行自动挂载，挂载到/mnt/sdb_1目录
		第一步：创建挂载点  mkdir /mnt/sdb_1
		第二步：修改/etc/fstab配置文件，添加/dev/sdb1分区挂载信息
		第三步：重启验证是否实现自动挂载 shutdown -r 0

		磁盘配额
		Linux内核支持基于文件系统的磁盘限额，它可以限制具体的某一个用户或用户组磁盘的使用量
		磁盘限额包括对block（块限制）的限制与对inode（节点限制）的限制，每种限制又分软限制与硬限制
		block限制（块限制）：使用空间大小的使用量
		inode限制（节点限制）：可以创建的文件个数限制
		硬限制：此限制是用户绝对不能超出的值
		软限制：是一种警告值，可以超出
		配额的设置
		1）修改/etc/fstab配置文件，为对应的分区加上对应的配额选项（usrquota（支持用户的配额），grpquota（支持用户组的配额））
		2)重新挂载分区
		mout -o remount /mnt/sdb_1
		3)创建配额数据文件
		quotacheck -cug 设备挂载点
		查看配额文件是否创建成功;ls /mnt/sdb_1
		4）设置用户或组的配额
		方法一：
		edquota -u 用户名
		edquota -g 用户组名
		方法二：
		setquota 用户名 块的软限制 块的硬限制 节点的软限制 节点的硬限制 挂载点
		方法三：模仿配额
		edquota -p 已经设置好配额的用户 带学习配额的用户
		5)启动配额
		quotaon 挂载点
		6)查看配额使用情况
		repquota -a
		给哪个用户设置的配额，就用哪个用户去验证
		验证时，如果提示挂载目录没有操作权限，修改挂载目录的权限 chmod 0+rwx 挂载目录
		7）关闭配额
		quotaoff 挂载点
		
		重新设置配额后，一定要重启配额：
		先关闭配额，在启动配额
	2文件相关观念及操作
		1）Linux目录结构
			/dev  设备目录
			/etc  配置目录
			/home  普通用户的主目录是放在/home目录下的
			/mnt或者/media  默认的挂载目录
		2)linux文件命名及文件类型
			文件名的约束：
				不能使用特殊字符（可以用_.+-）
				文件名区分大小写
				文件名最大长度为256个字符
				以.开头的文件为隐藏文件
			文件名的扩展名：
				其作用不是特别明显，但是在创建文件是最好是加上扩展名，便于自己来辨别文件
			文件类型
				目录文件：d
				文本文件：-
				软链接文件：l
				设备文件：b（块设备）c（字节设备）
			文件路径
			分类：
				绝对路径:参考根目录，只要目标目录没有改变，绝对路径就不变
				相对路径：参考的是当前工作目录，只要当前工作目录发生改变，相对路径就会发生改变
		修改文件的权限
		1）能够操作为文件的用户分类
			3类：
			①文件拥有者	u
			②同组其他用户	g
			③其他用户	o
		2）权限的1类型
			3种权限：
			①读		r
			②写		w
			③执行		x
		3）修改文件权限的方法
			语法：chmod 权限 文件名
			此命令只能是文件拥有者或管理员可以运行
			3种方法：
			①通过“+”、“-”添加或者去掉某个权限
			例如：给file1文件的拥有者加上执行的权限，给同组其他用户去掉写的权限，给其他用户去掉读的权限
			chmod u+x,g-w,o-r file1
			②通过“=”赋予某种权限
			例如：给file1文件的拥有者赋予读写执行的权限，给同组其他用户赋予读写的权限，给其他用户赋予读的权限
			chmod u=rwx,g=rw,o=r file1
			③通过3为8进制分别赋予不同用户不同的权限
			3位8进制
			第1位8进制：文件拥有者的权限
			第2位8进制：同组其他用户的权限
			第3位8进制：其他用户权限
			例如：给file1文件的拥有者赋予读写执行的权限，给同组其他用户赋予读写的权限，给其他用户赋予读的权限
			file1权限：rwx rw- r--
			第一种方法
			r  4  r--  100  4
			w  2  -w-  010  2
			x  1  --x  001  1
			chmod 764 file1
			第二种方法：
			rwx rw- r--
			111 110 100
			764
			chmod 764 file1


		修改文件的拥有者
		语法：chown 用户名 文件名
		此命令只有管理员才能运行
		3种表达方式：
		①只修改文件拥有者
		例如：将file1文件的文件拥有者改为root用户
		chown root file1
		②只修改文件的属组
		chown 文件拥有者:属组 文件名
		例如：将file1文件的属组改为group1用户组
		chown  :group1 file1
		③同时修改文件拥有者和属组
		例如：将file1文件的拥有者修改为Admin用户，将属组改为admin 用户组
		chown Admin:admin file1
		

		修改文件属组
		语法：chgrp 组名 文件名
		此命令只有管理员可以运行
		例如：将file1文件的属组改为group1用户组
		chgrp group1 file1


		文件的默认权限
		1）文件的默认权限由umask值和文件及目录的权限基数决定
		2）文件的权限基数：666   目录的权限基数：777
		3）默认掩码值：
			管理员默认的umask值为022，普通用户的umask为002
		4）修改掩码值
		umask 掩码值
		5）文件默认权限与umask值及文件、目录权限基数的关系
		umask值：002
		文件权限基数：666	目录权限基数：777
		file1文件：rw-rw-r--  664
		dic1目录：rwxrwxr-x  775
		文件默认权限：文件权限基数-umask值
		目录默认权限：目录权限基数-umask值
		umask值：033
		file2文件：rw-r--r--  644
		dic2目录：rwxr--r--  744
		文件默认权限：文件权限基数-umask值向下取偶的值（当umask值为奇数时，依次取偶，只对文件权限有效）
		目录默认权限：目录权限基数-umask值
		
		强制位和冒险位
		1）ext4文件系统除了支持读写执行（rwx）的权限外，还支持强制位和冒险位两种特殊的权限
		2）强制位（s） 文件拥有者（u），同组其他用户（g）
		冒险位(t) 其他用户（o）
		3）强制位和冒险位是添加到执行权限的位置
		原来有执行权限：强制位和冒险位用小写s和t
		原来没有执行权限：强制位和冒险位用大写S和T
		4）设置强制位
		①对文件拥有者设置强制位
		针对的是命令文件，对命令文件的文件拥有者设置强制位后，用户再来运行该命令时，用的是文件拥有者的身份来运行
		对文件设置过强制位以后，可以让对此文件没有执行权限的用户执行此文件
		chmod u+s 命令文件的路径
		例如：chmod u+s /usr/bin/chown
		对目录文件的属组设置强制
		对目录文件的属组设置强制后，再在该目录下创建的文件及子目录会继承目录的属组
		chmod g+s 目录文件

		5）对其他用户设置冒险位
		一般针对的是一个目录。
		在默认情况下，如果一个目录对用户有r、w和x权限，则这个用户可以在此目录中建立与删除任何文件。
		一旦在目录上设置了冒险位，则表示在此目录中，只有文件的拥有者、目录的拥有者与系统管理员才可以在目录中删除此文件。
		chmod o±t  目录文件


		6）字母权限与数字权限的转换
			把rwsr-S-w-字母权限转化成数字权限
			4位8进制
			第1位：强制位和冒险位的权限  110――>8进制：6
			后3位：原来的权限rwxr---w-   742



	标准输入输出、重定向及管道
	在Linux中，每个进程都有3个特殊的文件描述指针，是open文件时产生的一个很小的正整数，是一个索引值，它用于UNIX系统中，用于标识文件
	
	1.文件描述指针
	标准输入：0
	标准输入stdin（0）：默认是键盘
	标准输出：1
	标准输出stdout(1):默认是终端屏幕
	标准错误输出：2
	标准错误输出stderr（2）:默认是终端屏幕

	2.重定向
	标准输入、输出与错误输出，都可以用特定符号改变数据来源或去向

	1）输入重定向
	使用"<"来重定向输入源
	表示方式：命令<文件名
	例如：以wc命令为例，统计file1文件内容的行数、单词数、字符数
	wc<file1
	
	2）输出重定向
	使用">"改变数据的去向，结果保存到文件中
	表示方式：命令>文件名
	例如：以ls -l命令为例,将这个命令的结果保存到result.txt文件中
	
	3）追加重定向
	使用">>"可以把命令的结果，追加到文件中，不覆盖之前的内容
	表达方式:命令>>文件名
	例如：fdisk -l>>result.txt
	4）错误输出重定向
	使用"2>"可以把命令的错误结果保存到文件中
	表达方式：命令 2>文件名
	例如：fdisk -A 2>error.txt
	使用"2>>"可以把命令的错误追加到文件中

	5）双重输出重定向
	就是把正确结果和错误信息分别存放到不同文件中或者相同文件中
	把正确结果和错误信息分别存放到不同的文件中：
	ls -l >result.txt 2>error.txt
	ls -l >>result.txt 2>>error.txt
	把正确结果和错误信息存放到同一个文件中
	ls -l &>result.txt
	ls -l &>>result.txt
	
	3.输入结束符
	ctrl+d是默认的输入结束符
	自定义输入结束符：cat>file1<<随便什么字符串

	4.管道
	无名管道的作用：
	将前一个进程的输出作为后一个进程的输入。
	例如：ls -l|head -5
	多重管道：ls -l|cat|head -5

	
文件搜索、常见操作及归档
1.	文件的搜索命令
（1）which
	搜索的对象：可执行文件（命令文件）
	使用方法：which 被搜索的命令
    		去PATH环境变量执行的路径中搜索
             搜索的结果：命令的路径、别名
	例如：搜索ls命令的存放路径以及别名
	which  ls
（2）whereis
	搜索的对象：程序的二进制文件、说明文件、源文件
	使用方法：whereis [-bmsul] [-BMS  搜索路径 -f]  文件名

	选项：
	-b  搜索二进制文件
	-m  搜索说明文件
	-s  搜索源文件
	-u  搜索不常见的记录
	-l  列出搜索路径
	-B  二进制文件的搜索路径
	-M  说明文件的搜索路径
	-S  源文件的搜索路径
	-f  终止搜索路径
	例如：
	1）搜索和passwd命令相关的文件
	whereis  passwd
	2）搜索passwd命令的二进制文件
	whereis  -b  passwd
	3）在/usr/bin目录下搜索passwd命令的二进制文件
	whereis  -b  -B  /usr/bin  -f  passwd
	4）列出whereis命令的搜索路径
	whereis  -l
（3）locate
	搜索的对象：文本文件、目录文件（任何文件，除了新创建得文件无法搜索出来，因为新创建的文件需要管理员使用updatedb命令手动更新数据库）
	使用方法：locate  文件名
	只有路径中包含了文件名这几个关键字，这些路径都会被列出来。
	locate命令是配合路径数据库来使用的，新创建的文件没有立即加入数据库，需要管理员使用updatedb命令手动更新数据库。
	例如：locate  file1
（4）find
	搜索的对象：文本文件、目录文件
	搜索特点：在指定路径下递归搜索
	 可以按照不同的条件搜索，搜索功能强
	搜索出的结果可以做进一步的处理
	使用方法：find  搜索路径  [选项]  搜索的文件
	常用选项：
	-name   根据文件名搜索
	-user	  根据拥有者搜索
	-group	  根据属组搜索
	-perm		根据权限搜索
	-type	文件类型 	根据文件类型搜索
	（f:文本文件，d：目录文件，l：软链接文件，c:字符设备文件，b:块设备文件）
	-size   文件大小 	根据文件大小搜索
	-ctime  -n/+n 	根据创建时间搜索文件
	-atime  -n/+n 	根据访问时间搜索文件
	-mtime  -n/+n	根据修改时间搜索文件
	-n n天以内的文件，+n n天之前的文件
	-newer 文件名  搜索比该文件新的文件
	例如：
	①　查找/home目录下所有名为file的文件
	find /home -name file
	②　查以两个小写字母和两个数字开头的txt文件
	find  -name "[a-z][a-z][0-9][0-9]*.txt"
	③　查找/home目录下所有名为file的文件,且其文件拥有者为admin
	find /home -name file -user admin
	④　查找/home目录下所有名为file的文件,且其文件所属组为root
	find /home -name file -group root
	⑤　查找/home目录下所有名为file的文件,且其文件权限为666
	find /home -name file -perm 666
	⑥　查找/home目录下长度为100字符的，且其以file字符串开头的文件
	find /home -name "file*" -size 100c
	⑦　查找/home目录下长度超过10块的，且其以file字符串开头的文件（1块=512字节）
	find /home -name "file*" -size +10
	⑧　查找/home目录下以d字符开头的目录文件
	find /home  -type d -name "d*"
	⑨　查找/home目录下所有名为file的文件,且其文件权限为666
	find /home -name file -perm 666
	⑩　查找/home目录下长度为100字符的，且其以file字符串开头的文件
	find /home -name "file*" -size 100c
	11　查找/home目录下长度超过10块的，且其以file字符串开头的文件（1块=512字节）
	find /home -name "file*" -size +10
	12　查找/home目录2天以内创建的，且以f字符开头的文件
	find /home -ctime -2 -name "f*"
	13　查找/home目录2天以内访问过的的，且以f字符开头的文件
	find /home -atime -2 -name "f*"
	
	
	对查找的文件进一步操作
	语法：find 路径 参数 表达式 -exec 指令 {} \;


	搜索当前目录下，文件类型为文本文件，权限为rw-r--r--拥有者为admin，属组为group1，文件大小大于10块，2天内创建的，文件名以file开头的文件，对查找的文件显示其属性
	find -type f -perm 644  -user admin -group group1 -size +10 -ctime -2 -name "file*" -exec ls -l {} \;

常用的文件操作命令：
	head/tail more /less  文件查看
	wc	统计文件的行、词、字数
	grep	显示文件中匹配关键字的行
	sort	按序重排文本并送显示
	uniq	去除文件中相邻的重复行
	tr	转换字符
	cut	显示文件中的某一行
	paste	将文本按列拼接
		
		wc:计算字数
		语法：wc 选项 文件名
		补充说明：统计行数、单词数、字符数，若不指定文件名称，或者名称以-开头，则以键盘为输入来源。
		常用选项：
		-c 只显示文件的字符数
		-l 只显示行数
		-w 只显示单词数
		
		grep：查找文件里符合条件的行
		语法：grep 选项 关键字 文件名
		常用选项：
		-c 计算匹配关键字的行数
		-i 忽略字符大小写的差别
		-n 显示匹配的行及其行号
		-s 不显示不存在或不匹配的错误信息
		-h 查询多个文件时不显示文件名
		-l 查询文件时只显示匹配字符所在的文件名

		正则表达式
		^ 指定行的开始，如：'^test'匹配所有以"test"字符串开头的行
		$ 指定行的结束，如：'test$'匹配所有以"test"字符串结尾的行
		\< 指定单词的开始，如：'\<grep'匹配包含以grep开头的单词的行
		\> 指定单词的结束，如：'grep\>'匹配包含以grep结尾的单词的行
		. 匹配一个非换行符的字符，如：'te.t'匹配te后接一个任意字符，然后是t
		* 前面的字符重复任意次，如：'o*text'匹配所有一个或多个字符"o"后紧跟"test"字符串的行
		.* 一起用代表任意字符
		[] 匹配一个指定范围内的某个字符
		[^] 匹配不在范围内的任意字符
		x\{m\} 重复字符x，m次，如：'o\{5\}'匹配包含5个o的行
		x\{m,\} 重复字符x，至少m次，如：'o\{5,\}'匹配至少5个o的行
		x\{m,n\} #重复字符x，至少m次，不多于n次


		sort:对文件中的内容加以排序
		语法：sort 选项 文件名
		常用选项：
		-f 忽略大小写的差异
		-b 忽略最前面的空格符部分
		-M 以月份的名字来排序，比如JAN小于FEB
		-n 使用[纯数字]进行排序
		-r 反向排序
		-u 就是uniq，相同的数据中，仅出现一行
		-t 分隔符，默认是用[tab]建来分隔
		-k 以哪个区间（field）来进行排序

		uniq：合并文件相邻的重复行
		语法：uniq 选项 文件名
		常用选项：
		-c 在每行旁边显示改行重复出现的次数
		-d 仅显示重复出现的行
		-u 仅显示出现一次的行
		-n 前n个字段与每个字段前的空白一起被忽略
		+n 前n个字符被忽略，之前的字符跳过（字符从0开始编号）
		-f n 与-n相同，这里n是字段数
		-s n 与+n相同，这里n是字段数


		tr：对字符进行替换和删除，不管是删除还是替换都是对字符进行操作，而不是字符串（这个命令后面不能直接跟文件名）
		语法：删除：tr 选项 字符串1   替换：tr 选项 字符串1 字符串2
		常用选项：
		-c 用字符串1中字符集的补集替换此字符串，要求字符集为ASCLL
		-d 删除字符串1中所有输入字符
		-s 删除所有重复出现的字符序列，只保留一个

		举例:
		将文件file中所有的数字字符都删除
		tr -d "[0-9]" <file 或 cat file|tr -d "[0-9]"
		删除"0-9"补集
		tr -d -c "[0-9]"<sort.txt
		将文件file中出现的"abc"替换为"xyz"
		tr "abc" "xyz" <file
		使用tr命令将小写字母替换为大写字母
		cat sort.txt|tr [a-z] [A-Z]
		删除"连续着的"重复字母，只保留一个
		tr -s "[a-zA-Z]" <sort.txt

		cut：显示文件中某一列
		语法：cut 选项 文件名
		常见选项：
		-d 指定分隔符（要被指定的分隔符要用""引起来）
		-f 指定显示某一列（显示连续的列用-连接，显示不连续的列用，隔开）
		-c 指定几个字符对应的列（显示连续的字符用-连接，显示不连续的字符用，隔开）

		paste：按列拼接文件
		语法：paste 选项 文件名1 文件名2
		paste指令会把每个文件以列对列的方式，一列一列的合并
		常见选项：
		-d 用指定的字段分隔符
		-s 按行进行合并而非平行处理（不跟选项-s就是拼接文件，跟选项-s就是合并文件）
		
		文件的压缩和解压

		zip和unzip命令
		tar命令

		zip：压缩文件，文件经它压缩后会产生一个以“.zip”为扩展名的压缩文件
		语法：zip 选项 参数（要压缩的文件）
		常用选项：
		-q 不显示指令执行的过程
		-r 递归处理，将指定目录下的所有文件和子目录一并处理
		-d 从压缩文件中删除指定的文件
		-m 向压缩文件中添加文件
		zip压缩文件：
		zip -r 压缩文件的文件名 被压缩文件
		向压缩文件中添加文件
		zip -m 压缩文件 被压缩文件
		从压缩文件中删除文件
		zip -d 压缩文件 被压缩文件

		unzip:解压缩zip文件
		语法：unzip 选项 参数
		常见选项：
		-c 将解压的结果显示到屏幕上，并对字符做适当的转换
		-o 不必先询问用户，直接覆盖
		-n 解压时不要覆盖原有的文件
		-d 指定文件解压后的存放路径
		-l 查看压缩文件中包含的文件

		tar:用于建立、还原备份文件的工具，它也可以加入或解开备份文件内的文件。有时也称之为“打包”
		语法：tar 选项 文件/目录
		常见选项：
		-c 创建新的档案文件
		-x 从存档展开文件
		-t 列出档案文件中有哪些文件
		-r 将文件附加到存档结尾
		-u 更新档案文件
		-C 目录   指定档案文件的展开路径或者解压文件的解压路径
		-v 显示所有过程
		-z 用gzip压缩或解压文件
		-j 用bzip压缩或解压文件
		-f 指定档案文件名，且这个选项是最后一个选项，后面只能接档案名
		
		例如：
		使用bzip2工具将当前目录下以test*开头的文件压缩为test.tar.bz
		tar -cjvf test.tar.bz test*
		使用gzip工具将当前目录下有



 
	shell基础及编程

		shell的主要功能：

		（1）解释用户输入的终端命令
		（2）定制用户的环境
		（3）脚本编程，自动批处理

		shell的命令解释过程：

		检查命令的合法性：是否为shell内部的命令集
		匹配成功，命令将被解析为系统调用（system call）并传给内核
		否则将显示信息
		
		shell可以使大量的任务自动化
		
		shell脚本及基本语法：
		创建一个shell脚本：vi或其他
		执行脚本：

		①在命令提示处输入:
		$bash Shell脚本	
		②在命令提示处输入：
		$chmod u+x Shell脚本
		$./Shell脚本
		假如想指定/bin/bash为脚本的解释器，那么就应该在shell脚本的开始写入#!/bin/bash

		echo命令：显示""内的内容并自动换行
		加-n选项，则不换行。

		注释语句：#
		插入注释：使用#符号插入注释语句
	 	#!/bin/bash
		echo"hello"

		创建变量：变量名=值        "="前后不能有空格
		例如：
		name="John Rose"
		在Linux中的所有变量都被当作字符串来处理。例如：
		ctr=1 
		因此，变量ctr是字符"1"，而不是数字1

		引用变量
		$符号用于引用一个变量的内容，例如：
		定义变量：today=Monday
		引用变量：
			echo ${today}
			或echo
		
		给变量赋值
		shell允许用户从键盘中输入一个值给变量。如，read var1

		环境变量：
		HOME变量：存在当前用户主目录的位置
		PATH变量：存储可执行程序的搜索路径
		PS1和PS2变量：Linux下的bash shell有两级用户提示符PS1和PS2
		SHLVL变量：存储当前工作的shell level
		SHELL变量：存储了用户的缺省shell
		env命令：列出所有变量级其赋值
		
		内部变量：
		运行程序时使用的一些变量：由$和另一个字符组成
		$#:位置参数的数量
		$*:所有位置参数的内容
		$?:命令执行后返回的状态
		$$:当前进程的进程号
		$!:后台运行的最后一个进程号
		$0:当前执行的程序名
		$1:第一个参数
		$2:第二个参数
		....
		$n:第n个参数

		给命令取别名alias，如：alias ll="ls -al"（这个别名是临时的）
		
		算数运算：
		expr命令用于求算数表达式的值，例如：
		expr 4 + 5 （运算符前后必须有空格，不支持小数，乘法*前要加转义字符\进行转义）
		在$(())语法中，shell提供了完整的运算能力，而且使用与c相同运算符与优先级
		语法：$((表达式1,表达式2...))
		特点：
		在双括号结构中，所有表达式可以像c语言一样，如：a++，b-等
		在双括号结构中，所有变量可以不加入"$"符号前缀
		支持多个表达式运算，各个表达式之间用","隔开
		双括号可以进行逻辑运算，四则运算
		双括号结构扩展了for，while，if条件测试运算
		1.被引用的命令用单个反引号（又称为重音符）引起来，例如：
		    echo "The date is 'date'"
		date为日期命令，shell首先替换输出被反引号括起来的命令，然后在执行整个命		令。
		2.用$()也可以实现命令的替换，例如：

		命令分隔符：
		1  ；间隔的命令按顺序依次执行。
			例如：a=2;b=3;a='expr $a \* $b';echo $a
		2. &&前后命令的执行存在“逻辑与关系”，只有&&前面的命令执行成功，后		面才执行。
		3.|| 前后的命令存在“逻辑关系”，只有||前的命令执行失败，后面的命令才执行
		例如：var1=5;var2=4;var=3;echo $((var1<var2||var2>var3))
		
		命令行补全功能：
		当用户输入命令或者路径名的一部分后，只需要按<tab>键，bash就能将剩下的部分自动补全。
		1.若输入的前半部分命令或者路径唯一，按<tab>键将自动补全命令；
		2.若输入的前半部分命令或者路径不唯一，按一次<tab>键不会补全，按两次<tab>键，系统将会给出提示；








		命令替换：
		在命令中可以引用其他命令，有2种方式：
		
		
		条件语句
		循环命令