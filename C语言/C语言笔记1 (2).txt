 C语言出自贝尔实验室：由Ken Thompson和Ritchie这两人写出的K.R C   第一个里程碑
美国国家标准研究所ANSI制定了一套标准ANSI成为C语言标准  第二个里程碑
K.R C     ANSI     C    C99   C++11    C++  Java
          				         (int)              (short int)       (long int）    （long long int)
数据类型：基本类型:整型：signed  unsigned  整型 2 、4       短整型2           长整型4             超长整型8
		单位：位(bit  0,1)  字节(Byte,8位)   千字节(KB,1024)   兆字节(MB,1024K)  GB(1024M）TB(1024G)  PB(1024T)
		实型：单精度：float  4
		          双精度：double  8
		字符型：char  charactor  1
 		              0000，0000     1111，1111
		               0		255
			ASCII   标准128   扩展256	
			'\0'  空字符  0：字符串的结束符
			\引出的字符为转义字符

常量：数字
                八进制：077
	十进制：12   123.456   6.02*10^2=6.02E+2
	十六进制：0~9  A~F    0xAAFFAA   0X
          字符
          符号
	宏定义：  编译预处理
		头文件包含：#include
		条件编译:#if  #endif
		宏定义函数或字符串：#define(定义)本意：字符串的替换

变量：
         标识符
	标识符命名规则
		1.必须先定义后使用
		2.只能由字母、数字、下划线构成
		3.只能由字母、下划线打头
		4.大小写敏感
		5.不能与关键字同名  32个关键字
	命名规范：
		1.见名知意
		2.不要太长
		3.函数，变量，常量。。。
	类型转换：运算双方必须类型相同
		char  short  int  long  float  double
		自动转换
			短变长
		强制转换
			长变短
			强制类型转换符：（类型名）
运算符
           优先级：运算的先后关系
            分类：
	    按功能分类
		算术运算符：
			+ - * /  %(求余）++(自增)
			/：若左右两边均匀为整数，则结果为整除的结果，如5 / 3 = 1      3 / 5 =0    3.0 / 5 = 0.6 
			%：求余 5%3=2    3%5=3  左右两边全为整数
			++：x++ ++x    x = x + 1
			         x++:先操作后加一
			         ++x:先加一后操作
		关系运算符：大小关系，等于不等于关系
			> < >= <= == !=(不等于）
			大小关系  高于  等于不等于关系
			逻辑真假：
				逻辑真：真命题(1),true
				逻辑假：假命题(0),false
				1真0假     非零即为真
		逻辑运算符：逻辑运算
			&&:逻辑与，译为并且
			1 && 1= 1  1 && 0 = 0
			0 && 1= 0  0 && 0 = 0
			||：逻辑或，译为或

			! :逻辑非，!0 = 1    !1 = 0
			
			
	    按操作数分类：单目运算符：除小括号外优先级最高，（正负号）
	                            双目运算符：5 + 3，左右留空格
		            三目运算符：条件运算符 ？

数据结构  DS  Datastructer
条件运算符：条件判断
   ?:
   if-else
      x > y z = 1
      x==y z=0
      x < y z = -1
   if-else嵌套
赋值运算符：
   x = 5;
    复合赋值运算      		+=-=*=。。。
        x +=3;
逗号运算符：优先级最低
	，
	从左到右依次执行每一个表达式，最后一个表达式的结果是整个表达式的结果
	加括号
  按操作数分类：单目运算符：除小括号外优先级最高，（正负号）
	                            双目运算符：5 + 3，左右留空格
		            三目运算符：条件运算符 ?:
数字分解 revNum.dev
/ % 1234 -> 4321
1234->1,2,3,4->4*10000+3*100+2*10+1 ->4321

1234->1 ->1234/1000->1
1234->2->1234%1000->234/100->2
1234->3->1234/10->123%10->3
1234->4 ->1234 % 10 -> 4
  最高位 ？用该数字除以其最高位的位数所求得的整数
  中间位 ？ 将其变成最高位或者最低位，然后用最高位或者最低位的方法求
  最低位 ？用该数字除以其倒数第二位位数所求得的余数
死循环
 while(1)
 {
   ...
 }
 跳出循环：break//跳出当层循环
 while(循环条件）――当型循环――先判断后执行
 {
        循环体；
 }


while:当用户输入错误的时候，继续输入

for,while,do-while,if-goto

for:次数确定   while:次数不确定
 
do{
	循环体;
}while(循环条件)
do-while:先执行后循环-直到型循环


for(表达式1;表达式2 ;表达式3)
//表达式1：循环变量赋初值；表达式2：循环条件；表达式3：改变循环变量的值
{
	循环体;
}


多重循环
for(; ;)外层
 {
	for(; ;)内层2
	 {
		while()3
		 {
			goto label;
		 }
 	 }
 }
label:printf("hello");

程序 = 算法 + 数据结构

算法特点

描述工具：自然语言，流程图，代码

格式说明符：
	%d-int    %f-float    %ld-long
	%x %0x-16进制       %lf-double
	%s-字符串  	%c=char字符


输入、输出
	输入函数
		格式化输入：scanf
		非格式化输入：不适合格式说明符
			getch getche getcher
			刷新缓冲区：fflush
			一个字符的输入
	输出函数：
		格式化输出：printf
		非格式化输出：putchar
			一个字符的输出

复合语句  {
		char ch;
		ch = getchar();
		putchar(ch);
	}
空语句：“;”

随机函数 - 用于产生随机数  random
	randomize()  random()过时
	srand():置随机种子，为生产随机数做准备工作，准备工作只做一次
	rand()：产生随机数  stdlib.h
	time()：获取时间，用时间做种子  time.h

	srand((unsigned) time(NULL));
条件运算符、逻辑运算符、关系运算符
 
if-else:用于值的判断或范围的判断
	if (x>5)
	{
		......
	}else{
		......
	}

switch-case: 常用于多个值的判断
	注意事项
         1.break的使用
	   若没有break,会继续执行下一个case,直到遇到break或执行完switch-case为止。
	   建议每一个case后面都加break	
	  break可有可无
         2.defaul的使用
	若每一个case都不等则执行defaul常用于错误消息处理
	defaul可有可无
         3.case后面的数据必须是整型常量
穷举法 （暴力破解法）
	将所有可能解依次完成测试，直到找到正确解或全部测试完毕。
	1.找范围，找数据的范围，有几个范围写几成循环
	2.找关系，找问题描述中存在的关系，在最内层循环测试关系
	三阶水仙花： 153 = 1^3 + 5 ^3 + 3 ^ 3

统计数据问题
	定义计数器变量cnt , count
	通常初值为0：则cnt++
图形输出问题
	找出图形中的规律

行数        空格数	星星数	换行数	n : 总行数
1	3	1	1
2	2	3	1
3	1	5	1
4	0	7	1
       *
      ***		
     *****
    *******
int main(int  argc,  char  *argv[ ])
循环跳出问题
	break跳出当成循环
	continue跳出当次循环
	goto；跳出多重循问题
累加累乘问题
	累加-在原来的值的基础上不停的加数据，直到某个特定的值为止：
		初值通常为0
		cnt += ????
		找右边的（????）规律
	累乘-在原来的值的基础上不停的乘数据，直到某个特定的值为止：
		初值通常为1
		cnt *= ????
		找右边的规律
	DevC++ code::block
大话数据结构
查找问题
	在已知的大量数据中查找指定值的数据或指定位置的数据
#include <stdio.h>
#include <stdlib.h>
#define N 50
/* getHeights.dev
	找出软件19-1班有多少人的身高等于172.
	分析：
		1.定义计数器，初值为0
		2.定义变量，存储51个身高  
 		3.录入所有人的身高 	 (循环，比较51次)
		4.将每个人的身高与175作比较	 (循环，比较51次)
			如果相等，计数器+1
		5.输出人数，计数器 
		int height[51]
	
	数组名： height
	数组长度：数组所能处理的数据量，如51，数组中元素的个数
	数组下标：0~50，0~N-1，一种索引号（从0起标） 
	数组元素：height[0]~height[50]
	数组类型： int

	实际参数：实参，函数调用的实参与形参传值

递推问题
	要处理的数据存在递推关系，根据这种关系将数据推导出来的过程斐波那契数列问题
	关键点：找出数据间的关联关系
	兔子问题：

		1  2  3  4  5  6  7...........................24..........length
		0  1  2  3  4  5  6...........................23..........length-1

插入排序问题
	升序或降序
	冒泡排序：
		比较和交换   7    6    7-i
			   N  N-1  N-i
		第一轮（6）      第二轮（5）

	原数组有序
			插入前：0 1 3 4 5 6     <- 2	
			中  间：0 1   3 4 5 6
			插入后：0 1 2 3 4 5 6
			1.找位置：查找插入位置
				比较（从后往前）
			2.将数据依次往后移动
				从后往前依次移动一个位置
			3.插入

	原数组无序
		2  1  4   4            <-  3
	删除指定位置的元素
		删除模型：
		删除前：   10    2     5   3     6           删除第3个元素
		中   间：    10   2     3   6     6
		删除后：    10  2     3    6
	删除指定值的元素
		删除前：   10   2     5   3    6   7     删除值为5的元素
		中  间：    找到值为5的元素的位置
		删除后：   10    2    3   6    7
标志变量问题
	素数判断：
		如果一个数只能被1和本身整除：素数


	递归
		递归函数
			自己调用自己的函数
		有规律数据、有规律运动、有规律行为处理
		1.找规律
			找上一步操作与下一步操作之间的规律
		2.找出口
			递归出口，规律推导的终点

		求n!
		   f(n)  =  n * f(n-1);
		   f(n-1)  =  (n-1) * f(n-2);
		   f(n-2)  =  (n-2) * f(n-3);
			........................
		n = 0
		斐波那契数列求解，必须用递归。
		1   1     2     3      5.....................
		汉诺塔

	二维数组
		数学模型：数列、矩阵（行列式）
		三行四列：
		int arr[3][4];
		元素数量：行数*列数
		元素表达：行标+列标	M行N列
			  0~


下学期要学的：
		JavaScript    数据库    Linux   计算机网络技术










		
	
	
